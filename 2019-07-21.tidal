
hush

let scale = getScale (scaleTable ++ [("bell", [0,0,1,3,3,5,7,7,9,9,10])])
    wave = slow 4
          -- $ slow 4 $ fast (range 1 3 $ slow 3 $ saw)
          $ saw
in
d1
$ stack [
  struct (fast (chooseBy wave [3,2,0.5,1]) $ "t") $
  s "stat4op"
  # note (
    scale "bell" $
    chooseBy wave [0,5,3,7,2,0,8,11]
    )
  # octave 5
  # legato 1.5
  # gain 0.5
  # pF "op4ratio" 1.5
  # pF "op3ratio" 4
  # room 0.6
  -- # octer 0.25
  # lpf 2000
  # orbit 4
  ,
  (# note (
    scale "bell" $
    -- 4
    chooseBy wave [0,5,3,7,2,0,8,11]
    + (fast 2 $ 2*(run 3))
    + 3
    )) $
  struct (fast (chooseBy wave [4,2,0.5,1]) $ "t(5,8)") $
  s "par4op"
  # octave 7
  # legato 1.5
  # gain 0.45
  -- # pF "feedback" 100
  -- # release 0.75
  # pF "op4ratio" 1.5
  # pF "op3ratio" 0.5
  # pF "op1ratio" 1
  # pF "op2ratio" 3
  # room 0.7
  -- # octer 0.25
  # lpf 1000
  # orbit 5
  # silence
  ,
  struct (fast (chooseBy wave [4,2,0.5,1]) $ "t(5,8)") $
  s "par4op"
  # note (
    scale "bell" $
    -- 4
    chooseBy wave [0,5,3,7,2,0,8,11]
    + (fast 2 $ 2*(run 3))
    + 3
    )
  # octave 7
  # legato 1.5
  # gain 0.45
  -- # release 0.75
  # pF "op4ratio" 1.5
  # pF "op3ratio" 1
  # room 0.7
  -- # octer 0.25
  # lpf 4000
  # orbit 5
  # silence
  ,
  fast (chooseBy wave [3,8,6,1]) $
  fast (chooseBy (slow 2 $ wave) [3,8,6,1]) $
  s "opDrm02(2,8)"
  # note 0
  # octave 3
  # gain 0.8
  # legato (chooseBy wave [3,8,6,1])
  # lpf (range 4000 150 $ slow 4 $ wave)
  ,
  sometimes ghost $
  every 2 (inside 2 $ every 2 $ const  $ s "opDrm01") $
  slow (chooseBy wave [3,8,6,1]) $
  slow (chooseBy (fast 2 $ wave) [3,8,6,1]) $
  s "opDrm01(6,8,5)"
  # note 0
  # octave 5
  # gain 0.7
  # legato ((1/) $ chooseBy wave [3,8,6,1])
]
